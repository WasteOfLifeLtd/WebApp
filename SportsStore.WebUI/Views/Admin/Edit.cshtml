@model SportsStore.Domain.Entities.Book
@using System.Text
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel">
    <div class="panel-heading">
        <h3>Edit @Model.Title</h3>
        @Html.ValidationSummary()
    </div>

    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
    <div class="panel-body">
        @Html.HiddenFor(m => m.ID)
        <div class="form-group">
            <label>Title</label>
            @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>ISBN</label>
            @Html.TextBoxFor(x => x.ISBN, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Price</label>
            @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Description</label>
            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = 5 })
        </div>
        <div class="form-group">
            <label>Number In Stock</label>
            @Html.TextBoxFor(x => x.NumberInStock, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Number Of Pages</label>
            @Html.TextBoxFor(x => x.NumberOfPages, new { @class = "form-control" })
        </div>
        @Html.HiddenFor(x => x.Authors)
        <div class="form-group">
            <label>Authors</label><br/>
            @{try
                {
                    StringBuilder sb = new StringBuilder();
                    foreach (var author in Model.Authors)
                    {
                        sb.Append(author.FirstName + " " + author.LastName + ", ");
                    }
                    sb.Remove(sb.Length - 2, 2);
                <span>@sb.ToString()</span>
                }
                catch (Exception e) { }
            }
        </div>
        @Html.HiddenFor(x => x.Category)
        <div class="form-group">
            <label>Category</label><br/>
            <span>@Model.Category.Name</span>
        </div>
        
        <div class="form-group">
            <div style="position:relative;">
                <label>Image</label>
                <a class='btn' href='javascript:;'>
                    Choose File...
                    <input type="file" name="Image" size="40"
                           style="position:absolute;z-index:2;top:0;left:0;filter:alpha(opacity=0);
                                      opacity:0;background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val());' />

                </a>
                <span class='label label-info' id="upload-file-info"></span>
            </div>
            @if (Model.CoverImage == null)
        {
            <div class="form-control-static">No Image</div>
    }
    else
    {
        <img class="img-thumbnail" width="150" height="150"
             src="@Url.Action("GetImage", "Product", new { Model.ID })" />
}
        </div>
    </div>

        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel and return to List", "Index", null, new { @class = "btn btn-default" })
        </div>
    }
</div>